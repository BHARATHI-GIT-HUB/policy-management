@model RepositryAssignement.Models.PolicyEnrollment

@{
    ViewData["Title"] = "Detail";
    Layout = "~/Views/Shared/_CustomeLayout.cshtml";
    string? message = TempData["SuccessMessage"] as string;
    string? errorMessage = TempData["ErrorMessage"] as string ;

}

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&family=Merriweather:ital,wght@0,300;0,400;0,700;0,900;1,300;1,400;1,700;1,900&family=Open+Sans:ital,wght@0,300..800;1,300..800&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Protest+Riot&display=swap" rel="stylesheet">
<style>
    a {
        color: inherit; /* Use the color inherited from the parent */
        text-decoration: none; /* Remove default underline */
    }

    .inter {
        font-family: "Inter", sans-serif;
        font-weight: 500;
        font-style: normal;
    }
    
</style>
<h1>Details</h1>
<div class="p-3 bg-red rounded-3 shadow my-3 inter ">
<table class="table table-striped table-hover bg-white">
    <thead>
        <tr>
            <th scope="col" style="font-size:20px">Attribute</th>
                <th scope="col" style="font-size:20px">Value</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td >Plan Name</td>
            <td style="font-weight:400">@Html.DisplayFor(model => model.Plan.PlanName)</td>
        </tr>
        <tr>
                <td class="inter">Agent Name</td>
                <td style="font-weight:400">@Html.DisplayFor(model => model.Agent.User!.Username)</td>
        </tr>
        <tr>
                <td  class="inter">Client Name</td>
                <td style="font-weight:400">@Html.DisplayFor(model => model.Client.User!.Username)</td>
        </tr>
        <tr>
                <td class="inter">Provider Name</td>
                <td style="font-weight:400">@Html.DisplayFor(model => model.Plan.Provider.User!.Username)</td>
        </tr>
        <tr>
                <td class="inter">Coverage Amount</td>
                <td style="font-weight:400">
                    @if (Model != null && Model.CoverageAmount != 0)
                    {
                        @Model.CoverageAmount.ToString("N0")
                    }
                    else
                    {
                        @Model?.CoverageAmount
                    }
                    </td>
        </tr>
        <tr>
                <td class="inter">Frequency</td>
                <td style="font-weight:400">@Html.DisplayFor(model => model.Frequency)</td>
        </tr>
            <tr>
                <td class="inter">Time Period</td>
                <td style="font-weight:400">@Html.DisplayFor(model => model.TimePeriod)</td>
            </tr>
        <tr>
                <td class="inter">Premium</td>
                <td style="font-weight:400">
                    @if (Model != null && @Model.Premium != 0)
                    {
                        @Model.Premium.ToString("N0")
                    }
                    else
                    {
                        @Model?.Premium
                    }
                    </td>
        </tr>
        <tr>
                <td class="inter">Commission Amount</td>
                <td style="font-weight:400">
                    @if (Model != null && @Model.CommisionAmount != 0)
                    {
                        @Model.CommisionAmount.ToString("N0")
                    }
                    else
                    {
                        @Model?.CommisionAmount
                    }
                   </td>
        </tr>

        <tr>
                <td class="inter">Enrolled On</td>
                <td style="font-weight:400">@Html.DisplayFor(model => model.EnrolledOn)</td>
        </tr>
        <tr>
                <td class="inter">Cancelled On</td>
                <td style="font-weight:400">@Html.DisplayFor(model => model.CancelledOn)</td>
        </tr>
        <tr>
                <td class="inter">Expired On</td>
                <td style="font-weight:400">@Html.DisplayFor(model => model.ExpiredOn)</td>
        </tr>
       
    </tbody>
</table>
</div>
<div class="d-flex gap-3">
    @if (ViewBag.Error != null)
    {
        <button asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-primary" disabled>Edit</button>
        <button asp-action="Delete" asp-route-id="@Model?.Id" class="btn btn-danger" disabled>Delete</button>
    }
    else
    {
        <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-primary">Edit</a>
        <a asp-action="Delete" asp-route-id="@Model?.Id" class="btn btn-danger">Delete</a>
    }

    

</div>

@if (!string.IsNullOrEmpty(errorMessage))
{

    <div class="alert alert-danger d-flex gap-3 align-items-center position-absolute" style="right:2px; top:-12px;z-index:20" role="alert">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-exclamation-triangle-fill text-danger" viewBox="0 0 16 16">
            <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5m.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2" />
        </svg>           <div>
            @errorMessage
        </div>
    </div>

}

@if (!string.IsNullOrEmpty(message))
{

    <div class="alert alert-success d-flex gap-2 align-items-center position-absolute" style="right:2px; top:-12px;z-index:20" role="alert">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-patch-check-fill text-green" viewBox="0 0 16 16">
            <path d="M10.067.87a2.89 2.89 0 0 0-4.134 0l-.622.638-.89-.011a2.89 2.89 0 0 0-2.924 2.924l.01.89-.636.622a2.89 2.89 0 0 0 0 4.134l.637.622-.011.89a2.89 2.89 0 0 0 2.924 2.924l.89-.01.622.636a2.89 2.89 0 0 0 4.134 0l.622-.637.89.011a2.89 2.89 0 0 0 2.924-2.924l-.01-.89.636-.622a2.89 2.89 0 0 0 0-4.134l-.637-.622.011-.89a2.89 2.89 0 0 0-2.924-2.924l-.89.01zm.287 5.984-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708.708" />
        </svg>       <div>
            @message
        </div>
    </div>

  

}

<div class="toast position-absolute" style="right:2px; top:-12px;z-index:20" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="toast-header">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-patch-check-fill text-green" viewBox="0 0 16 16">
            <path d="M10.067.87a2.89 2.89 0 0 0-4.134 0l-.622.638-.89-.011a2.89 2.89 0 0 0-2.924 2.924l.01.89-.636.622a2.89 2.89 0 0 0 0 4.134l.637.622-.011.89a2.89 2.89 0 0 0 2.924 2.924l.89-.01.622.636a2.89 2.89 0 0 0 4.134 0l.622-.637.89.011a2.89 2.89 0 0 0 2.924-2.924l-.01-.89.636-.622a2.89 2.89 0 0 0 0-4.134l-.637-.622.011-.89a2.89 2.89 0 0 0-2.924-2.924l-.89.01zm.287 5.984-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708.708" />
        </svg>              <strong class="mr-auto">Bootstrap</strong>
        <small>11 mins ago</small>
        <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="toast-body">
        Hello, world! This is a toast message.
    </div>
</div>